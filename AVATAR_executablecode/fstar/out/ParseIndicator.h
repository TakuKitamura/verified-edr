/* 
  This file was generated by KreMLin <https://github.com/FStarLang/kremlin>
  KreMLin invocation: krml -verify -warn-error +9 -drop WasmSupport -tmpdir ./out -fsopt --cache_dir -fsopt ./out -fsopt --cache_checked_modules -skip-linking -skip-compilation -no-prefix ParseSpeed -no-prefix ParseIndicator -no-prefix ParseDoor parseSpeed.fst parseIndicator.fst parseDoor.fst
  F* version: <unknown>
  KreMLin version: bf7d50e8
 */

#ifndef __ParseIndicator_H
#define __ParseIndicator_H

#include "kremlib.h"




typedef struct struct_error0_s
{
  int32_t code;
  C_String_t message;
}
struct_error0;

int32_t __proj__Mkstruct_error__item__code0(struct_error0 projectee);

C_String_t __proj__Mkstruct_error__item__message0(struct_error0 projectee);

typedef struct fstar_uint8_s
{
  uint8_t value;
  struct_error0 error;
}
fstar_uint8;

uint8_t __proj__Mkfstar_uint8__item__value(fstar_uint8 projectee);

struct_error0 __proj__Mkfstar_uint8__item__error(fstar_uint8 projectee);

fstar_uint8 parseIndicator_body(uint32_t can_id, uint8_t can_dlc, uint8_t *data);

fstar_uint8 parseIndicator(uint32_t can_id, uint8_t can_dlc, uint8_t *data);


#define __ParseIndicator_H_DEFINED
#endif
